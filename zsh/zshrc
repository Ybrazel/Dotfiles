# If you come from bash you might have to change your $PATH.
# export PATH=$HOME/bin:/usr/local/bin:$PATH

# Path to your oh-my-zsh installation.
  export ZSH=/$HOME/.oh-my-zsh

# Set name of the theme to load. Optionally, if you set this to "random"
# it'll load a random theme each time that oh-my-zsh is loaded.
# See https://github.com/robbyrussell/oh-my-zsh/wiki/Themes
ZSH_THEME="murilasso"

# Uncomment the following line to use case-sensitive completion.
# CASE_SENSITIVE="true"

# Uncomment the following line to use hyphen-insensitive completion. Case
# sensitive completion must be off. _ and - will be interchangeable.
# HYPHEN_INSENSITIVE="true"

# Uncomment the following line to disable bi-weekly auto-update checks.
# DISABLE_AUTO_UPDATE="true"

# Uncomment the following line to change how often to auto-update (in days).
# export UPDATE_ZSH_DAYS=13

# Uncomment the following line to disable colors in ls.
# DISABLE_LS_COLORS="true"

# Uncomment the following line to disable auto-setting terminal title.
# DISABLE_AUTO_TITLE="true"

# Uncomment the following line to enable command auto-correction.
# ENABLE_CORRECTION="true"

# Uncomment the following line to display red dots whilst waiting for completion.
# COMPLETION_WAITING_DOTS="true"

# Uncomment the following line if you want to disable marking untracked files
# under VCS as dirty. This makes repository status check for large repositories
# much, much faster.
# DISABLE_UNTRACKED_FILES_DIRTY="true"

# Uncomment the following line if you want to change the command execution time
# stamp shown in the history command output.
# The optional three formats: "mm/dd/yyyy"|"dd.mm.yyyy"|"yyyy-mm-dd"
# HIST_STAMPS="mm/dd/yyyy"

# Would you like to use another custom folder than $ZSH/custom?
# ZSH_CUSTOM=/path/to/new-custom-folder

# Which plugins would you like to load? (plugins can be found in ~/.oh-my-zsh/plugins/*)
# Custom plugins may be added to ~/.oh-my-zsh/custom/plugins/
# Example format: plugins=(rails git textmate ruby lighthouse)
# Add wisely, as too many plugins slow down shell startup.
plugins=(git)
plugins=(zsh-autosuggestions)

source $ZSH/oh-my-zsh.sh

# User configuration

# export MANPATH="/usr/local/man:$MANPATH"

# You may need to manually set your language environment
# export LANG=en_US.UTF-8

# Preferred editor for local and remote sessions
# if [[ -n $SSH_CONNECTION ]]; then
#   export EDITOR='vim'
# else
#   export EDITOR='mvim'
# fi

# Compilation flags
# export ARCHFLAGS="-arch x86_64"

# ssh
# export SSH_KEY_PATH="~/.ssh/rsa_id"

# Set personal aliases, overriding those provided by oh-my-zsh libs,
# plugins, and themes. Aliases can be placed here, though oh-my-zsh
# users are encouraged to define aliases within the ZSH_CUSTOM folder.
# For a full list of active aliases, run `alias`.
#
# Example aliases
# alias zshconfig="mate ~/.zshrc"
# alias ohmyzsh="mate ~/.oh-my-zsh"
#alias vi='vim'
#export DISPLAY=localhost:0.0

# z.lua
eval "$(lua /usr/local/bin/z.lua --init zsh)"

# Golang
export GOROOT=/usr/local/go
export GOPATH=$HOME/go
export PATH=$PATH:$GOPATH/bin:$GOROOT/bin

# virtualenv
export PATH=$PATH:$HOME/.local/bin


# Proxy
## proxyon
proxyon() {
    export https_proxy=http://127.0.0.1:7890
    export http_proxy=http://127.0.0.1:7890
    export all_proxy=socks5://127.0.0.1:7891
    echo "HTTP/HTTPS Proxy on"
}

## proxyoff
proxyoff() {
    unset http_proxy
    unset https_proxy
    unset all_proxy
    echo "HTTP/HTTPS Proxy off"
}


# SSH

function sssh () {
    /usr/bin/ssh-copy-id -o "StrictHostKeyChecking no" -o "UserKnownHostsFile /dev/null" "$@"; ssh "$@"
}
function pssh () {
    sshpass -p 'abc123' /usr/bin/ssh -o "StrictHostKeyChecking no"  -o "UserKnownHostsFile /dev/null" root@192.168."$@"
    [ $? -eq 0 ] && return
    #sshpass -p 'abcd1234' /usr/bin/ssh -o "StrictHostKeyChecking no"  -o "UserKnownHostsFile /dev/null" root@192.168."$@";
    #[ $? -eq 0 ] && return
    #sshpass -p 'gateway' /usr/bin/ssh -o "StrictHostKeyChecking no"  -o "UserKnownHostsFile /dev/null" root@192.168."$@";
    #[ $? -eq 0 ] && return
}

# loc

function locdir() {
    for i in `ll |grep ^d | awk '{print $NF}'`;do echo $i; loc $i;done
}

# TMUX

function autotmux() {
    session_name="work"

    tmux new -d -s $session_name
    tmux new-window -t $session_name:2 -n local
    tmux new-window -t $session_name:3 -n 30.250

    tmux send -t $session_name:2 "z pyzbs" Enter
    tmux send -t $session_name:3 "pssh 30.250 " Enter

    tmux ls |grep $session_name
    tmux attach -t $session_name

}

function py2venv() {
    source /home/yiran/Documents/py2-venv/bin/activate
}

function unpy2venv() {
    deactivate
}

# GOVC
# vCenter host
export GOVC_URL=192.168.71.255
# vCenter credentials
export GOVC_USERNAME="vsphere.local\administrator"
export GOVC_PASSWORD="!QAZ2wsx"
# disable cert validation
export GOVC_INSECURE=false


# resetvm

function resetvm() {
    govc vm.power -off=true -dc=BJ_IDC node1
    govc vm.power -off=true -dc=BJ_IDC node2
    govc vm.power -off=true -dc=BJ_IDC node3
    govc snapshot.revert -dc=BJ_IDC -vm=node1 installed2
    govc snapshot.revert -dc=BJ_IDC -vm=node2 installed2
    govc snapshot.revert -dc=BJ_IDC -vm=node3 installed2
    govc vm.power -on=true -dc=BJ_IDC node1
    govc vm.power -on=true -dc=BJ_IDC node2
    govc vm.power -on=true -dc=BJ_IDC node3
}
